name: UpdateEPG

on:
  schedule:
    - cron:  '0 12 * * *'
      
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
  pull_request:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - uses: actions/cache@v2.1.3
        id: cache-id
        with:
          path: ${{ runner.temp }}/cache
          key: ${{ runner.os }}-cache-v1.0
      
      - uses: airvzxf/cache-anything-new-action@v1.0.1
        with:
          script: 'install.sh'
          is_cached: ${{ steps.cache-id.outputs.cache-hit }}
          cache: ${{ runner.temp }}/cache
          snapshot: '/'
          exclude: '/boot /data /dev /mnt /proc /run /sys'
        
      - name: run
        run: |
          python main.py
          tv_sort --by-channel --duplicate-error --output epg.xml EPG-GRCY-tmp.xml
          echo '<!-- generated on '`date -u`' -->' >> epg.xml
          gzip -k epg.xml
        
      - name: Upload Gz
        if: ${{ github.event_name != 'pull_request'}}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./epg.xml.gz
          asset_name: epg.xml.gz
          tag: EPG
          body: EPG 
          overwrite: true
          
      - name: Upload Xml
        if: ${{ github.event_name != 'pull_request'}}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./epg.xml
          asset_name: epg.xml
          tag: EPG
          body: EPG 
          overwrite: true
